
JavaScript Array Methods

Arrays in JavaScript have many built-in methods to manipulate, search, and iterate over data.

-----------------------------------------
Creation
-----------------------------------------
let arr = [1, 2, 3];
let arr2 = new Array(1, 2, 3);

-----------------------------------------
Adding / Removing Elements
-----------------------------------------
push() - Adds item(s) to end of array - arr.push(4);
pop() - Removes last item - arr.pop();
unshift() - Adds item(s) to beginning - arr.unshift(0);
shift() - Removes first item - arr.shift();
splice(start, deleteCount, ...items) - Add/Remove at specific index - arr.splice(1, 0, 99);
slice(start, end) - Returns a new array (does not modify original) - arr.slice(1,3);

-----------------------------------------
Combining / Splitting
-----------------------------------------
concat() - Merge arrays - arr.concat(arr2);
join(separator) - Join array into string - arr.join("-");
split() (String Method) - Convert string → array - "a,b,c".split(",");

-----------------------------------------
Searching / Checking
-----------------------------------------
indexOf(value) - First index of value - arr.indexOf(2);
lastIndexOf(value) - Last index of value - arr.lastIndexOf(2);
includes(value) - Returns true if value exists - arr.includes(3);
find(callback) - Returns first element that matches - arr.find(x => x>2);
findIndex(callback) - Returns index of first match - arr.findIndex(x => x>2);

-----------------------------------------
Iteration / Transformation
-----------------------------------------
forEach(callback) - Loop over items (no return) - arr.forEach(x=>console.log(x));
map(callback) - Transform & return new array - arr.map(x=>x*2);
filter(callback) - Filter items → new array - arr.filter(x=>x>2);
reduce(callback, initial) - Reduce to single value - arr.reduce((a,b)=>a+b,0);
reduceRight() - Like reduce but from right

-----------------------------------------
Sorting
-----------------------------------------
sort(compareFn) - Sorts array (alphabetically by default) - arr.sort((a,b)=>a-b);
reverse() - Reverses array in place - arr.reverse();

-----------------------------------------
Others
-----------------------------------------
flat(depth) - Flattens nested arrays - [1,[2,3]].flat();
flatMap(callback) - Map + Flatten one level - arr.flatMap(x=>[x*2]);
every(callback) - True if all match condition - arr.every(x=>x>0);
some(callback) - True if at least one matches - arr.some(x=>x>5);
fill(value, start, end) - Fill array section - arr.fill(0);
copyWithin(target, start, end) - Copy part to another position - arr.copyWithin(0,2);
Array.isArray(value) - Check if value is array - Array.isArray(arr);

-----------------------------------------
Convert Array-like to Array
-----------------------------------------
Array.from("abc"); // ["a","b","c"]
[..."abc"]; // ["a","b","c"]

-----------------------------------------
Mutating methods: push, pop, shift, unshift, splice, sort, reverse, fill, copyWithin.
Non-mutating methods: slice, concat, map, filter, reduce, flat, flatMap, join.